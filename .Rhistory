geom_polygon(
data = rbind(
lPitchDimensions$lGoalframes$dtGoalPostAirDefenseLow[y %in% range(y)][order(y)],
lPitchDimensions$lGoalframes$dtGoalPostAirDefenseHigh[y %in% range(y)][rev(order(y))]
),
aes(x = x, y = y),
fill = cLineColour,
# color = 'black'
),
geom_polygon(
data = rbind(
lPitchDimensions$lGoalframes$dtGoalPostFloorOffenseLow[x %in% range(x)][order(x)],
lPitchDimensions$lGoalframes$dtGoalPostAirOffenseLow[x %in% range(x)][rev(order(x))]
),
aes(x = x, y = y),
fill = cLineColour
# color = 'black'
),
geom_polygon(
data = rbind(
lPitchDimensions$lGoalframes$dtGoalPostFloorOffenseHigh[x %in% range(x)][order(x)],
lPitchDimensions$lGoalframes$dtGoalPostAirOffenseHigh[x %in% range(x)][rev(order(x))]
),
aes(x = x, y = y),
fill = cLineColour
# color = 'black'
),
geom_polygon(
data = rbind(
lPitchDimensions$lGoalframes$dtGoalPostAirOffenseLow[y %in% range(y)][order(y)],
lPitchDimensions$lGoalframes$dtGoalPostAirOffenseHigh[y %in% range(y)][rev(order(y))]
),
aes(x = x, y = y),
fill = cLineColour,
# color = 'black'
)
)
)
}
lGoalFrameElements = list()
for ( i in seq(length(lPitchDimensions$lGoalframes)) ) {
lGoalFrameElements = append(
lGoalFrameElements,
lapply(
seq(length(lPitchDimensions$lGoalframes[[i]])),
function (j) {
nextJ = j + 1
nextJ = ifelse(nextJ > length(lPitchDimensions$lGoalframes[[i]]), 1, nextJ)
dtCoordinates = rbind(
lPitchDimensions$lGoalframes[[i]][[j]],
lPitchDimensions$lGoalframes[[i]][[nextJ]][.N:1]
)
if ( nrow(dtCoordinates) ) {
returnObject = geom_polygon(
data = dtCoordinates,
aes(
x = nXStart + x,
y = nYStart + y
),
color = cLineColour,
fill = cLineColour
)
} else {
returnObject = NULL
}
return ( returnObject )
}
)
)
}
lGoalFrameElements = lGoalFrameElements[!sapply(lGoalFrameElements, is.null)]
lPitchElements = append(
lPitchElements,
lGoalFrameElements
)
rm(lGoalFrameElements)
dtGoalNetElements = rbindlist(
lapply(
lPitchDimensions$lGoalnet,
function( lSegments ) {
# lSegments = lPitchDimensions$lGoalnet[[5]]
dtSegments = rbindlist(
lapply(
lSegments,
function( dtSegment ) {
if ( nrow(dtSegment) ) {
dtSegment = data.table(
x = dtSegment[1, x],
y = dtSegment[1, y],
xend = dtSegment[2, x],
yend = dtSegment[2, y]
)
} else {
dtSegment = data.table()
}
dtSegment
}
),
fill = T
)
dtSegments
}
),
fill = T
)
lPitchElements = append(
lPitchElements,
geom_segment(
data = dtGoalNetElements,
aes(
x = x,
y = y,
xend = xend,
yend = yend
),
color = cLineColour,
alpha = 0.4
)
)
if ( F ) {
lPitchElements = append(
lPitchElements,
list(
# direction of attack
geom_rect(
data = data.table(
x = ( lPitchDimensions$lParameters$nXSpan / 2 ) - ( lPitchDimensions$lParameters$nXSpan * 2 / 105 ),
xend = ( lPitchDimensions$lParameters$nXSpan / 2 ),
# xend = ( lPitchDimensions$lParameters$nXSpan / 2 ) + ( lPitchDimensions$lParameters$nXSpan * 2 / 105 ),
y = ( lPitchDimensions$lParameters$nYSpan * -2.5 / 68 ) + ( lPitchDimensions$lParameters$nXSpan * 0.9 / 105 ),
yend = ( lPitchDimensions$lParameters$nYSpan * -2.5 / 68 ) + ( lPitchDimensions$lParameters$nXSpan * 1.1 / 105 )
),
aes(
xmin = nXStart + x,
xmax = nXStart + xend,
ymin = nYStart + y,
ymax = nYStart + yend
),
# arrow = arrow(length = unit(0.03, "npc")),
color = cLineColour
)
,
geom_polygon(
data = data.table(
x = c(
( lPitchDimensions$lParameters$nXSpan / 2 ),
( lPitchDimensions$lParameters$nXSpan / 2 ) + ( lPitchDimensions$lParameters$nXSpan * 2 / 105 ),
( lPitchDimensions$lParameters$nXSpan / 2 )
),
y = c(
lPitchDimensions$lParameters$nYSpan * -2.5 / 68,
( lPitchDimensions$lParameters$nYSpan * -2.5 / 68 ) + ( lPitchDimensions$lParameters$nXSpan * 1 / 105 ),
( lPitchDimensions$lParameters$nYSpan * -2.5 / 68 ) + ( lPitchDimensions$lParameters$nXSpan * 2 / 105 )
)
),
aes(
x = nXStart + x,
y = nYStart + y
),
fill = cLineColour
)
)
)
}
lPitchElements = append(
lPitchElements,
cf
)
ggplot() + lPitchElements
source('/media/ask/Data/Personal/Projects/Personal/CodaBonito/R/geom_pitch.R')
rm(list = ls())
source('/media/ask/Data/Personal/Projects/Personal/CodaBonito/R/fGetPitchDimensions.R')
source('/media/ask/Data/Personal/Projects/Personal/CodaBonito/R/geom_pitch.R')
source('/media/ask/Data/Personal/Projects/Personal/CodaBonito/R/theme_pitch.R')
library(data.table)
library(ggplot2)
library(POV)
cForegroundColour = '#FE8D26'
cBackgroundColour = '#676769'
nXLimit = 120
nYLimit = 80
mOrigin = cbind(
-nXLimit * 2,
nYLimit/2,
100
)
mScreenCoordinate = cbind(
nXLimit/2,
nYLimit/2,
0
)
p1 = ggplot() + geom_pitch(
nXStart = 0,
nYStart = 0,
nXEnd = nXLimit,
nYEnd = nYLimit,
cPitchColour = 'black',
cLineColour = 'white',
mOrigin = mOrigin,
mScreenCoordinate = mScreenCoordinate,
mViewBeginsFromCoordinates = cbind(20,40,0)
) +
theme_pitch() +
theme(
plot.background = element_rect( fill = cBackgroundColour ),
legend.position = 'none'
)
p1
p1
mViewBeginsFromCoordinates = cbind(
nXLimit/2,
nYLimit/2,
0
)
p1 = ggplot() + geom_pitch(
nXStart = 0,
nYStart = 0,
nXEnd = nXLimit,
nYEnd = nYLimit,
cPitchColour = 'black',
cLineColour = 'white',
mOrigin = mOrigin,
mScreenCoordinate = mScreenCoordinate,
mViewBeginsFromCoordinates = mViewBeginsFromCoordinates,
mViewBeginsFromCoordinates = cbind(20,40,0)
) +
theme_pitch() +
theme(
plot.background = element_rect( fill = cBackgroundColour ),
legend.position = 'none'
)
p1 = ggplot() + geom_pitch(
nXStart = 0,
nYStart = 0,
nXEnd = nXLimit,
nYEnd = nYLimit,
cPitchColour = 'black',
cLineColour = 'white',
mOrigin = mOrigin,
mScreenCoordinate = mScreenCoordinate,
mViewBeginsFromCoordinates = mViewBeginsFromCoordinates
) +
theme_pitch() +
theme(
plot.background = element_rect( fill = cBackgroundColour ),
legend.position = 'none'
)
p1
mViewBeginsFromCoordinates = cbind(
nXLimit/2,
nYLimit * 0.75,
0
)
p1 = ggplot() + geom_pitch(
nXStart = 0,
nYStart = 0,
nXEnd = nXLimit,
nYEnd = nYLimit,
cPitchColour = 'black',
cLineColour = 'white',
mOrigin = mOrigin,
mScreenCoordinate = mScreenCoordinate,
mViewBeginsFromCoordinates = mViewBeginsFromCoordinates
) +
theme_pitch() +
theme(
plot.background = element_rect( fill = cBackgroundColour ),
legend.position = 'none'
)
p1
mViewBeginsFromCoordinates = cbind(
nXLimit * 0.75,
nYLimit/2,
0
)
p1 = ggplot() + geom_pitch(
nXStart = 0,
nYStart = 0,
nXEnd = nXLimit,
nYEnd = nYLimit,
cPitchColour = 'black',
cLineColour = 'white',
mOrigin = mOrigin,
mScreenCoordinate = mScreenCoordinate,
mViewBeginsFromCoordinates = mViewBeginsFromCoordinates
) +
theme_pitch() +
theme(
plot.background = element_rect( fill = cBackgroundColour ),
legend.position = 'none'
)
p1
dtShots2Points = rbindlist(
lapply(
seq(nrow(dtShots2)),
function( iRow ) {
# iRow = 1
print(iRow)
mCoordinates = cbind(
dtShots2[iRow][, x] + ( cos(seq(0, 2*pi, 0.01)) * 0.25 ),
dtShots2[iRow][, y] + ( sin(seq(0, 2*pi, 0.01)) * 0.25 ),
dtShots2[iRow][, z]
)
mTransformedCoordinates = fGetTransformedCoordinates(
mCoordinates = mCoordinates,
mOriginCoordinates = mOriginCoordinates,
mScreenCoordinates = mScreenCoordinates,
mViewBeginsFromCoordinates = mViewBeginsFromCoordinates
)
mCoordinatesEnd = cbind(
dtShots2[iRow][, xend],
dtShots2[iRow][, yend] + ( sin(seq(0, 2*pi, 0.01)) * 0.25 ),
dtShots2[iRow][, zend] + ( cos(seq(0, 2*pi, 0.01)) * 0.25 )
)
mTransformedCoordinatesEnd = fGetTransformedCoordinates(
mCoordinates = mCoordinatesEnd,
mOriginCoordinates = mOriginCoordinates,
mScreenCoordinates = mScreenCoordinates,
mViewBeginsFromCoordinates = mViewBeginsFromCoordinates
)
rbind(
data.table(
x = mTransformedCoordinates[, 1],
y = mTransformedCoordinates[, 2],
Tag = ''
),
data.table(
x = mTransformedCoordinatesEnd[, 1],
y = mTransformedCoordinatesEnd[, 2],
Tag = 'end'
)
)[,
goal := dtShots2[iRow, goal]
][,
shot := iRow
]
}
)
)
rm(list = ls())
source('/media/ask/Data/Personal/Projects/Personal/CodaBonito/R/fGetPitchDimensions.R')
source('/media/ask/Data/Personal/Projects/Personal/CodaBonito/R/geom_pitch.R')
source('/media/ask/Data/Personal/Projects/Personal/CodaBonito/R/theme_pitch.R')
library(data.table)
library(ggplot2)
library(POV)
cForegroundColour = '#FE8D26'
cBackgroundColour = '#676769'
nXLimit = 120
nYLimit = 80
mOrigin = cbind(
-nXLimit * 2,
nYLimit/2,
100
)
mScreenCoordinates = cbind(
nXLimit/2,
nYLimit/2,
0
)
mViewBeginsFromCoordinates = cbind(
nXLimit * 0.75,
nYLimit/2,
0
)
p1 = ggplot() + geom_pitch(
nXStart = 0,
nYStart = 0,
nXEnd = nXLimit,
nYEnd = nYLimit,
cPitchColour = 'black',
cLineColour = 'white',
mOrigin = mOrigin,
mScreenCoordinates = mScreenCoordinates,
mViewBeginsFromCoordinates = mViewBeginsFromCoordinates
) +
theme_pitch() +
theme(
plot.background = element_rect( fill = cBackgroundColour ),
legend.position = 'none'
)
dtReactionTime = data.table()
library(POV)
rm(list = ls())
source('/media/ask/Data/Personal/Projects/Personal/CodaBonito/R/fGetPitchDimensions.R')
source('/media/ask/Data/Personal/Projects/Personal/CodaBonito/R/geom_pitch.R')
source('/media/ask/Data/Personal/Projects/Personal/CodaBonito/R/theme_pitch.R')
library(data.table)
library(ggplot2)
library(POV)
cForegroundColour = '#FE8D26'
cBackgroundColour = '#676769'
nXLimit = 120
nYLimit = 80
mOrigin = cbind(
-nXLimit * 2,
nYLimit/2,
100
)
mScreenCoordinates = cbind(
nXLimit/2,
nYLimit/2,
0
)
mViewBeginsFromCoordinates = cbind(
nXLimit * 0.75,
nYLimit/2,
0
)
p1 = ggplot() + geom_pitch(
nXStart = 0,
nYStart = 0,
nXEnd = nXLimit,
nYEnd = nYLimit,
cPitchColour = 'black',
cLineColour = 'white',
mOrigin = mOrigin,
mScreenCoordinates = mScreenCoordinates,
mViewBeginsFromCoordinates = mViewBeginsFromCoordinates
) +
theme_pitch() +
theme(
plot.background = element_rect( fill = cBackgroundColour ),
legend.position = 'none'
)
p1
dtShots2 = dtShots[,
list(
x,
y,
z = 0,
xend = 120,
yend = (
( lPitchDimensions$lParameters$nYSpan / 2 ) - ( lPitchDimensions$lParameters$nGoalWidth_m / 2 )
) + (
lPitchDimensions$lParameters$nGoalWidth_m * shootZonePointleft / 100
),
zend = ( 1 - ( shootZonePointtop / 100 ) ) * lPitchDimensions$lParameters$nGoalHeight_m,
xg,
goal = shotOutcome == 'goal'
)
]
}
dtShots2Points = rbindlist(
lapply(
seq(nrow(dtShots2)),
function( iRow ) {
# iRow = 1
print(iRow)
mCoordinates = cbind(
dtShots2[iRow][, x] + ( cos(seq(0, 2*pi, 0.01)) * 0.25 ),
dtShots2[iRow][, y] + ( sin(seq(0, 2*pi, 0.01)) * 0.25 ),
dtShots2[iRow][, z]
)
mTransformedCoordinates = fGetTransformedCoordinates(
mCoordinates = mCoordinates,
mOriginCoordinates = mOriginCoordinates,
mScreenCoordinates = mScreenCoordinates,
mViewBeginsFromCoordinates = mViewBeginsFromCoordinates
)
mCoordinatesEnd = cbind(
dtShots2[iRow][, xend],
dtShots2[iRow][, yend] + ( sin(seq(0, 2*pi, 0.01)) * 0.25 ),
dtShots2[iRow][, zend] + ( cos(seq(0, 2*pi, 0.01)) * 0.25 )
)
mTransformedCoordinatesEnd = fGetTransformedCoordinates(
mCoordinates = mCoordinatesEnd,
mOriginCoordinates = mOriginCoordinates,
mScreenCoordinates = mScreenCoordinates,
mViewBeginsFromCoordinates = mViewBeginsFromCoordinates
)
rbind(
data.table(
x = mTransformedCoordinates[, 1],
y = mTransformedCoordinates[, 2],
Tag = ''
),
data.table(
x = mTransformedCoordinatesEnd[, 1],
y = mTransformedCoordinatesEnd[, 2],
Tag = 'end'
)
)[,
goal := dtShots2[iRow, goal]
][,
shot := iRow
]
}
)
)
source('/media/ask/Data/Personal/Projects/Personal/POV/R/fGetTransformedCoordinates.R')
fGetTransformedCoordinates
dtdata = fread('~/Desktop/SoC_SoE_Mapping.csv')
dtdata
dtdata = fread('~/Desktop/m48_soesoc.csv')
dtdata
dtdata[, paste0(rev(V3), 'f')]
dtdata[, paste0(rev(V3), collapse = ',')]
dtdata[, paste0(rev(V4), collapse = ',')]
dtdata[, paste0(rev(round(V4,4)), collapse = ',')]
dtdata[, paste0(rev(round(V3,4)), collapse = ',')]
dtdata[, paste0(rev(formatC(V3, digits = 4)), collapse = ',')]
dtdata[, paste0(rev(formatC(V3, digits = 5)), collapse = ',')]
dtdata[, paste0(rev(formatC(V4, digits = 5)), collapse = ',')]
dtdata[, paste0(rev(formatC(V3, digits = 4)), collapse = ',')]
dtdata[, paste0(rev(paste(formatC(V3, digits = 4), 'f')), collapse = ',')]
dtdata[, paste0(rev(paste0(formatC(V3, digits = 4), 'f')), collapse = ',')]
dtdata[, paste0(rev(paste0(formatC(V4, digits = 4), 'f')), collapse = ',')]
dtdata[, paste0(rev(paste0(formatC(V3, digits = 4), 'f')), collapse = ',')]
dtdata[, paste0(rev(paste0(formatC(V3, digits = 5), 'f')), collapse = ',')]
dtdata[, paste0(rev(paste0(formatC(V3, digits = 5), 'f')), collapse = ',')]
dtdata[, paste0(rev(paste0(formatC(V4, digits = 5), 'f')), collapse = ',')]
